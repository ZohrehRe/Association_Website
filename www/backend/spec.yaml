swagger: '2.0'
info:
  version: '1.0.0'
  title: HyperGroup
  description: 'A simple website for a voluntary association.'
  contact:
    name: 'HyperGroup Members'
host: 'hypergroup.herokuapp.com'
basePath: /v1
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
tags:
  - name: event
    description: Events hold by the Association
  - name: person
    description: Persons (volunteers) who are working in the Association
  - name: service
    description: Services provided by the Association
paths:
  /events:
    get:
      summary: Get the list of Events of the association
      description: 'Retrieves the names, descriptions, and details of the all events.'
      tags:
        - event
      parameters:
        - name: offset
          in: query
          description: Pagination offset. Default is 0.
          type: integer
        - name: limit
          in: query
          description: Maximum number of items per page. Default is 5 and cannot exceed 100.
          type: integer
      responses:
        '200':
          description: A collection of events
          schema:
            $ref: '#/definitions/Events'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/events/{id}':
    get:
      summary: Get the details of an Event by providing it's ID
      description: 'Retrieves the name, description, and details of an event by specifying its UUID.'
      tags:
        - event
      parameters:
        - name: id
          in: path
          description: The UUID of the event to retrieve
          required: true
          type: string
      responses:
        '200':
          description: An event
          schema:
            $ref: '#/definitions/Event'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/events/bymonth/{month}':
    get:
      summary: Get all the events of a specific month
      description: 'Provide the name of the month of interest and get all the events related to that month.'
      tags:
        - event
      parameters:
        - name: month
          in: path
          description: The name of the month of interest to retrive the related events
          required: true
          type: string
          enum:
            - Jan
            - Feb
            - Mar
            - Apr
            - May
            - Jun
            - Jul
            - Aug
            - Sep
            - Oct
            - Nov
            - Dec
      responses:
        '200':
          description: List of Events of the specified month
          schema:
            $ref: '#/definitions/Events'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'      
  '/events/{id}/related_persons':
    get:
      summary: Get the list of the Persons Associated with an Event
      description: Retrieves a list of Persons associated with a specific Event.
      tags:
        - event
      parameters:
        - name: id
          in: path
          description: The UUID of the event to retrieve persons for
          required: true
          type: string
      responses:
        '200':
          description: Related Persons of the specified Event
          schema:
            $ref: '#/definitions/Persons'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/events/{id}/related_services':
    get:
      summary: Get the list of the related Services Associated with an Event
      description: Retrieves a collection of Services associated with a specific Event.
      tags:
        - event
      parameters:
        - name: id
          in: path
          description: The UUID of the event to retrieve related Services for
          required: true
          type: string
      responses:
        '200':
          description: The related related Services of the specified Event
          schema:
            $ref: '#/definitions/Services'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /persons:
    get:
      summary: Get the list of the persons (volunteers) of the association
      description: 'Retrieves the names, descriptions, and details of all the persons in the association.'
      tags:
        - person
      parameters:
        - name: offset
          in: query
          description: Pagination offset. Default is 0.
          type: integer
        - name: limit
          in: query
          description: Maximum number of items per page. Default is 5 and cannot exceed 100.
          type: integer
      responses:
        '200':
          description: List of persons
          schema:
            $ref: '#/definitions/Persons'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/persons/{id}':
    get:
      summary: Get the information of a person in the association by providing his or her ID
      description: 'Retrieves the name, description, and UUID of a person by specifying its UUID.'
      tags:
        - person
      parameters:
        - name: id
          in: path
          description: The UUID of the person to retrieve
          required: true
          type: string
      responses:
        '200':
          description: A Person
          schema:
            $ref: '#/definitions/Person'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/persons/{id}/related_services':
    get:
      summary: Get the list of Services Associated with a Person
      description: Retrieves a list of Services associated with a specified Person.
      tags:
        - person
      parameters:
        - name: id
          in: path
          description: The UUID of the person to retrieve services for
          required: true
          type: string
      responses:
        '200':
          description: List of related services to a specific Person
          schema:
            $ref: '#/definitions/Services'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/persons/{id}/related_Events':
    get:
      summary: Get the list of Events Associated with a Person
      description: Retrieves a collection of Events associated with a specified Person.
      tags:
        - person
      parameters:
        - name: id
          in: path
          description: The UUID of the person to retrieve related Events for
          required: true
          type: string
      responses:
        '200':
          description: List of related Events to a specific Person
          schema:
            $ref: '#/definitions/Events'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'            
  /services:
    get:
      summary: Get a list of available services of the association
      description: 'Retrieves the names, descriptions, and details of the all services.'
      tags:
        - service
      parameters:
        - name: offset
          in: query
          description: Pagination offset. Default is 0.
          type: integer
        - name: limit
          in: query
          description: Maximum number of items per page. Default is 5 and cannot exceed 100.
          type: integer
      responses:
        '200':
          description: A collection of services
          schema:
            $ref: '#/definitions/Services'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/services/{id}':
    get:
      summary: Get the details of a Service by ID
      description: 'Retrieves the name, description, and details of a service by specifying its UUID.'
      tags:
        - service
      parameters:
        - name: id
          in: path
          description: The UUID of the service to retrieve
          required: true
          type: string
      responses:
        '200':
          description: A service
          schema:
            $ref: '#/definitions/Service'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/services/{id}/related_persons':
    get:
      summary: Get the list of Persons Associated with a Service
      description: Retrieves a list of Persons associated with a specified Service.
      tags:
        - service
      parameters:
        - name: id
          in: path
          description: The UUID of the service to retrieve Persons for
          required: true
          type: string
      responses:
        '200':
          description: List of related Persons to a Specific Service
          schema:
            $ref: '#/definitions/Persons'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/services/{id}/related_events':
    get:
      summary: Get the list of Events Associated with a Service
      description: Retrieves a collection of Events associated with a specified Service.
      tags:
        - service
      parameters:
        - name: id
          in: path
          description: The UUID of the service to retrieve related Events for
          required: true
          type: string
      responses:
        '200':
          description: List of related Events to a specific service
          schema:
            $ref: '#/definitions/Events'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Events:
    type: array
    items:
      $ref: '#/definitions/Event'
  Event:
    properties:
      id:
        type: integer
        description: Universally Unique Identifier for the Event
        example: 1001
      name:
        type: string
        description: Event title
        example: How to cope with misbehaviour as a parent
      description:
        type: string
        description: Event Description
        example: In this event we are going to talk about the bad temper of the childrens and how the parents should react to it.
      photo:
        type: string
        description: Photo of the event
        example: "path of the photo"
      createdAt:
        type: string
        format: date-time
        description: Date and time of creating the event 
      updatedAt:
        type: string
        format: date-time
        description: Date and time of updating the event
      enabled:
        type: boolean
        description: Is the event enable or not
      startAt:
        type: string
        format: date-time
        description: Date and time of starting the event 
      endAt:
        type: string
        format: date-time
        description: Date and time of ending the event 
  Persons:
    type: array
    items:
      $ref: '#/definitions/Person'
  Person:
    properties:
      id:
        type: integer
        description: Universally Unique Identifier for the Person
        example: 101
      name:
        type: string
        description: Person Name
        example: Alex
      lastname:
        type: string
        description: Person last name
        example: Ridolfex
      description:
        type: string
        description: Person Description
        example: Alex is an internal doctor. Specialized for children. 
      photo:
        type: string
        description: Photo of the Person
        example: 'path to the photo'
      email:
        type: string
        description: Email of the Person.
        example: 'alex@gmail.com'
      createdAt:
        type: string
        format: date-time
        description: Date and time of creating the person 
      updatedAt:
        type: string
        format: date-time
        description: Date and time of updating the person information
      enabled:
        type: boolean
        description: Is the person is active in the association or not
  Services:
    type: array
    items:
      $ref: '#/definitions/Service'
  Service:
    properties:
      id:
        type: integer
        description: Universally Unique Identifier for the Service
        example: 201
      name:
        type: string
        description: Service Name
        example: How to play with autistic childrens
      description:
        type: string
        description: Service Description
        example: In this service we explain to you how to play with autistic childrens workshop through a lot of examples and workshops. 
      photo:
        type: string
        description: Photo of the Service
        example: 'path to the photo'
      createdAt:
        type: string
        format: date-time
        description: Date and time of creating the Service 
      updatedAt:
        type: string
        format: date-time
        description: Date and time of updating the Service information
      enabled:
        type: boolean
        description: Is the Service is active in the association or not
  Error:
    properties:
      code:
        type: integer
      message:
        type: string
        example: Something went wrong!
